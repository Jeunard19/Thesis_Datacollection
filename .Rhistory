```{r 2load, message=FALSE}
rms::vif(lrm(outcome~status, data = ny.data))
relevel(ny.data$status, ref = "lower")
relevel(ny.data$outcome, ref = "schwa")
lrm(outcome~status, data = ny.data)
2.5257+-4.1352
exp( -1.6095)
lrm(outcome~status, data = ny.data)
ny.data$outcome <- as.factor(ny.data$outcome)
ny.data$status <- as.factor(ny.data$status)
relevel(ny.data$status, ref = "lower")
relevel(ny.data$outcome, ref = "schwa")
lrm(outcome~status, data = ny.data)
table(ny.data)
relevel(ny.data$status, ref = "lower")
ny.data$outcome <- as.factor(ny.data$outcome)
ny.data$status <- as.factor(ny.data$status)
ny.data$status <- relevel(ny.data$status, ref = "lower")
ny.data$outcome <-relevel(ny.data$outcome, ref = "schwa")
30/6
ny.data$outcome <- as.factor(ny.data$outcome)
ny.data$status <- as.factor(ny.data$status)
ny.data$status <- relevel(ny.data$status, ref = "lower")
ny.data$outcome <-relevel(ny.data$outcome, ref = "schwa")
lrm(outcome~status, data = ny.data)
-2.5257+ 4.1352
exp( 1.6095)
plogis(1.6095)
status_m <- c(rep("upper", 68), rep("middle",125), rep("lower",71))
outcome_m <- c(rep("r", 30), rep("schwa", 6), rep("both", 32),
rep("r", 20), rep("schwa", 74), rep("both", 31),
rep("r", 4), rep("schwa", 50), rep("both", 17))
# create the data frame
ny_m.data <- data.frame(outcome_m, status_m)
table(ny_m.data) # this should show the same table as the one in slide 7
str(ny_m.data)
ny_m.data <- data.frame(outcome_m, status_m)
table(ny_m.data) # this should show the same table as the one in slide 7
ny_m.data$outcome_m <- as.factor(ny_m.data$outcome_m )
ny_m.data$status_m <- as.factor(ny_m.data$status_m )
ny_m.data$status_m <- relevel(ny_m.data$status_m, ref = "lower")
ny_m.data$outcome_m  <-relevel(ny_m.data$outcome_m, ref = "both")
str(ny_m.data)
ny_m.data <- data.frame(outcome_m, status_m)
table(ny_m.data) # this should show the same table as the one in slide 7
ny_m.data$outcome_m <- as.factor(ny_m.data$outcome_m )
ny_m.data$status_m <- as.factor(ny_m.data$status_m )
ny_m.data$status_m <- relevel(ny_m.data$status_m, ref = "upper")
ny_m.data$outcome_m  <-relevel(ny_m.data$outcome_m, ref = "both")
str(ny_m.data)
library(mlogit) # package for multinomial logistic regression
multi1.df <- mlogit.data(ny_m.data, shape="wide", choice="prog") # prepare data for mlogit
multi.lm <- mlogit(outcome_m ~ 1 | status_m , data=ny_m.data)
multi.lm <- mlogit(outcome_m ~ 1 | status_m , data=ny_m.data, reflevel=3)
multi1.df <- mlogit.data(ny_m.data, shape="wide", choice="outc
[]
]
?
)
''
.
""
""
multi1.df <- mlogit.data(ny_m.data, shape="wide", choice="outcome_m")
multi.lm <- mlogit(outcome_m ~ 1 | status_m , data=ny_m.data)
multi.lm <- mlogit(outcome_m ~ 1 | status_m , data=multi1.df)
summary(multi.lm)$coefficients
exp( -1.67397100   )
ny_m.data$outcome_m <- as.factor(ny_m.data$outcome_m )
ny_m.data$status_m <- as.factor(ny_m.data$status_m )
ny_m.data$status_m <- relevel(ny_m.data$status_m, ref = "upper")
ny_m.data$outcome_m  <-relevel(ny_m.data$outcome_m, ref = "both")
library(mlogit) # package for multinomial logistic regression
multi1.df <- mlogit.data(ny_m.data, shape="wide", choice="outcome_m") # prepare data for mlogit
multi.lm <- mlogit(outcome_m ~ 1 | status_m , data=multi1.df)
summary(multi.lm)$coefficients
ny_m.data <- data.frame(outcome_m, status_m)
table(ny_m.data) # this should show the same table as the one in slide 7
ny_m.data$outcome_m <- as.factor(ny_m.data$outcome_m )
ny_m.data$status_m <- as.factor(ny_m.data$status_m )
ny_m.data$status_m <- relevel(ny_m.data$status_m, ref = "upper")
ny_m.data$outcome_m  <-relevel(ny_m.data$outcome_m, ref = "schwa")
library(mlogit) # package for multinomial logistic regression
multi1.df <- mlogit.data(ny_m.data, shape="wide", choice="outcome_m") # prepare data for mlogit
multi.lm <- mlogit(outcome_m ~ 1 | status_m , data=multi1.df,reflevel = "schwa")
summary(multi.lm)$coefficients
exp( 1.67397100   )
# create the variables
status <- c(rep("upper", 36), rep("middle",94), rep("lower",54))
outcome <- c(rep("r", 30),rep("schwa", 6), rep("r", 20),rep("schwa", 74),rep("r", 4),rep("schwa", 50))
# create the data frame
ny.data <- data.frame(outcome, status)
table(ny.data)
remove.packages("rlang")
library(mlogit)
library(mlogit)
remove.packages("rlang")
multi1.df <- mlogit.data(ny_m.data, shape="wide", choice="outcome_m") # prepare
install.packages(rlang)
install.packages('rlang')
install.packages("rlang")
library(mlogit)
install.packages("rlang")
install.packages('rlang')
install.packages(rlang)
library(mlogit)
library(mlogit)
install.packages('rlang')
library(mlogit)
P1<-read.csv("data_P1_TpR.csv")
P2<-read.csv("data_P2_TpR.csv")
P1_sd<-read.csv("data_P1_SD.csv")
P2_sd<-read.csv("data_P2_SD.csv")
setwd("Flask")
library(lme4)
P1<-read.csv("data_P1_TpR.csv")
P2<-read.csv("data_P2_TpR.csv")
P1_sd<-read.csv("data_P1_SD.csv")
P2_sd<-read.csv("data_P2_SD.csv")
P2_sd$Time <- P2$Time
P2_sd$Time <- P2$Time
success <- as.numeric(P2_sd$Success)
condition<-as.factor(P2_sd$Condtion)
TIME <-round(P2_sd$Time/1000)
PAIR <- as.factor(P2_sd$Pair)
TARGET<- as.factor(P2_sd$Target)
IsIntroducer <-as.factor(P2_sd$Introducer)
GAME<- P2_sd$Game
model5 = glmer( success ~ GAME + (GAME|PAIR) + (GAME|TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
GAME
model5 = glmer( success ~ GAME + (1|PAIR) + (1|TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
GAME<- as.factor(P2_sd$Game)
model5 = glmer( success ~ GAME + (GAME|PAIR) + (GAME|TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model5 = glmer( success ~ GAME + (1|PAIR) + (1|TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
GAME<- P2_sd$Game
model5 = glmer( success ~ GAME + (GAME|PAIR) + (GAME|TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model5 = glmer( success ~ GAME + (GAME|PAIR) + (GAME|TARGET),family = binomial(link = "logit"))
summary(model5)
model2graph = ggpredict(model2,c("GAME [all]"))
plot(model2graph)
library(ggeffects)
model2graph = ggpredict(model2,c("GAME [all]"))
model2graph = ggpredict(model5,c("GAME [all]"))
plot(model2graph)
model6 = glmer( success ~ GAME+TIME + (GAME+TIME|PAIR) + (GAME+TIME|TARGET),family = binomial(link = "logit"))
summary(model6)
model2graph = ggpredict(model6,c("GAME [all]","TIME [all]"))
plot(model2graph)
model2graph = ggpredict(model6,c("GAME","TIME"))
plot(model2graph)
model2graph = ggpredict(model6,c("TIME", "GAME"))
plot(model2graph)
GAME<- as.factor(P2_sd$Game)
model6 = glmer( success ~ GAME+TIME + (GAME+TIME|PAIR) + (GAME+TIME|TARGET),family = binomial(link = "logit"))
GAME<- P2_sd$Game
model7 = glmer( success ~ GAME*TIME + (GAME*TIME|PAIR) + (GAME*TIME|TARGET),family = binomial(link = "logit"))
model7 = glmer( success ~ GAME*TIME + (GAME*TIME|PAIR) + (GAME*TIME|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')), family = binomial(link = "logit"))
model7 = glmer( success ~ GAME*TIME + (GAME*TIME|PAIR) + (GAME*TIME|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
AIC(model1,model2,model2B,model3,model4,model5,model6,modal7)
model4 = glmer( success ~ condition * TIME + (condition*TIME|PAIR) + (condition *TIME| TARGET), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')), family = binomial(link = "logit"))
model3 = glmer( success ~ condition + TIME + (condition+TIME|PAIR) + (condition +TIME| TARGET), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')),  family = binomial(link = "logit"))
model2B = glmer( success ~ condition + (condition|PAIR) + (condition|TARGET), family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model2 = glmer( success ~ TIME + (TIME|PAIR) + (TIME|TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model1 = glmer( success ~ 1  + (1|PAIR) + (1| TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
AIC(model1,model2,model2B,model3,model4,model5,model6,modal7)
AIC(model1,model2,model2B,model3,model4,model5,model6,model7)
sdx<-P2_sd$X
sdy<-P2_sd$Y
model8 = glmer( success ~ sdz + (sdz|PAIR) + (sdz|TARGET),family = binomial(link = "logit"))
sdz<-P2_sd$Z
model8 = glmer( success ~ sdz + (sdz|PAIR) + (sdz|TARGET),family = binomial(link = "logit"))
summary(model8)
model9 = glmer( success ~ sdy + (sdy|PAIR) + (sdy|TARGET),family = binomial(link = "logit"))
summary(model9)
model10 = glmer( success ~ sdx + (sdx|PAIR) + (sdx|TARGET),family = binomial(link = "logit"))
summary(model10)
success <- as.numeric(P$Success)
P <- rbind(P2_sd,P1_sd)
P1_sd<-read.csv("data_P1_SD.csv")
P2_sd<-read.csv("data_P2_SD.csv")
P2_sd$Time <- P2$Time
P1_sd$Time <- P1$Time
P <- rbind(P2_sd,P1_sd)
#P <- P[P$Condtion=="modified",]
P <- P[P$Role=="director",]
success <- as.numeric(P$Success)
condition<-as.factor(P$Condtion)
TIME <-round(P$Time/1000)
PAIR <- as.factor(P$Pair)
TARGET<- as.factor(P$Target)
IsIntroducer <-as.factor(P$Introducer)
IsSuccIntroducer <- as.factor(P$Succ_Introducer)
PARTICIPANT <- as.factor(P$Participant)
sdz<-P$Z
sdx<-P$X
sdy<-P$Y
Game <- P$Game
Win <-as.factor(P$Success)
gmodel1 = glmer( success ~ sdx + (sdx|PAIR) + (sdx|TARGET),family = binomial(link = "logit"))
gmodel2 = glmer( success ~ sdy + (sdy|PAIR) + (sdy|TARGET),family = binomial(link = "logit"))
gmodel4 = glmer( success ~ sdz + (sdz|PAIR) + (sdz|TARGET),family = binomial(link = "logit"))
summary(gmodel1)
summary(gmodel2)
summary(gmodel4)
head(P)
P2_sd<-read.csv("data_P2_SD.csv")
P2_sd$Time <- P2$Time
success <- as.numeric(P2_sd$Success)
condition<-as.factor(P2_sd$Condtion)
TIME <-round(P2_sd$Time/1000)
PAIR <- as.factor(P2_sd$Pair)
TARGET<- as.factor(P2_sd$Target)
IsIntroducer <-as.factor(P2_sd$Introducer)
GAME<- P2_sd$Game
sdz<-P2_sd$Z
sdx<-P2_sd$X
sdy<-P2_sd$Y
model8 = glmer( success ~ IsIntroducer + (IsIntroducer|PAIR) + (IsIntroducer|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(model8)
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8)
model3graph = ggpredict(model8,c("IsIntroducer"))
plot(model3graph)
model8 = glmer( success ~ IsIntroducer+TIME + (IsIntroducer+TIME|PAIR) + (IsIntroducer+TIME|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model9 = glmer( success ~ IsIntroducer+TIME + (IsIntroducer+TIME|PAIR) + (IsIntroducer+TIME|TARGET),family = binomial(link = "logit"))
model9 = glmer( success ~ IsIntroducer+TIME + (IsIntroducer+TIME|PAIR) + (IsIntroducer+TIME|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
summary(model9)
model3graph = ggpredict(model9,c("IsIntroducer","TIME"))
plot(model3graph)
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
lmodel =  lmer (sdz ~   IsIntroducer + (IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsIntroducer|TARGET))
lmodel2 =  lmer (sdz ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel3 =  lmer (sdz ~   condition+IsIntroducer + (condition+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition+IsIntroducer|TARGET))
lmodel4 =  lmer (sdz ~   condition*IsIntroducer + (condition*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition*IsIntroducer|TARGET))
lmodel5 =  lmer (sdz ~   Win + (Win|PAIR) + (1 | PARTICIPANT) + (Win|TARGET))
lmodel6 =  lmer (sdz ~   Win+IsIntroducer + (Win+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win+IsIntroducer|TARGET))
lmodel7 =  lmer (sdz ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
lmodel8 =  lmer (sdz ~   1+ (1|PAIR) + (1|TARGET))
lmodel9 =  lmer (sdz ~   IsSuccIntroducer + (IsSuccIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer|TARGET))
lmodel10 =  lmer (sdz ~   IsSuccIntroducer+IsIntroducer + (IsSuccIntroducer+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer+IsIntroducer|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10)
model1graph = ggpredict(lmodel,c("IsIntroducer"))
plot(model1graph)
model1graph = ggpredict(lmodel7,c("IsIntroducer","Win"))
plot(model1graph)
lmodel11 =  lmer (sdz ~   Game + (Game|PAIR) + (1 | PARTICIPANT) + (Game|TARGET))
P <- rbind(P2_sd,P1_sd)
#P <- P[P$Condtion=="modified",]
P <- P[P$Role=="director",]
D<-paste0(P$Target, P$Introducer)
success <- as.numeric(P$Success)
condition<-as.factor(P$Condtion)
TIME <-round(P$Time/1000)
PAIR <- as.factor(P$Pair)
TARGET<- as.factor(P$Target)
IsIntroducer <-as.factor(P$Introducer)
IsSuccIntroducer <- as.factor(P$Succ_Introducer)
PARTICIPANT <- as.factor(P$Participant)
sdz<-P$Z
sdx<-P$X
sdy<-P$Y
Game <- P$Game
Win <-as.factor(P$Success)
lmodel =  lmer (sdz ~   IsIntroducer + (IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsIntroducer|TARGET))
lmodel2 =  lmer (sdz ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel3 =  lmer (sdz ~   condition+IsIntroducer + (condition+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition+IsIntroducer|TARGET))
lmodel4 =  lmer (sdz ~   condition*IsIntroducer + (condition*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition*IsIntroducer|TARGET))
lmodel5 =  lmer (sdz ~   Win + (Win|PAIR) + (1 | PARTICIPANT) + (Win|TARGET))
lmodel6 =  lmer (sdz ~   Win+IsIntroducer + (Win+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win+IsIntroducer|TARGET))
lmodel7 =  lmer (sdz ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
lmodel8 =  lmer (sdz ~   1+ (1|PAIR) + (1|TARGET))
lmodel9 =  lmer (sdz ~   IsSuccIntroducer + (IsSuccIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer|TARGET))
lmodel10 =  lmer (sdz ~   IsSuccIntroducer+IsIntroducer + (IsSuccIntroducer+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer+IsIntroducer|TARGET))
lmodel11 =  lmer (sdz ~   Game + (Game|PAIR) + (1 | PARTICIPANT) + (Game|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11)
summary(lmodel11)
model2graph = ggpredict(lmodel11,c("Game"))
plot(model2graph)
lmodel11 =  lmer (sdz ~   IsIntroducer+Game + (IsIntroducer+Game|PAIR) + (1 | PARTICIPANT) + (IsIntroducer+Game|TARGET))
summary(lmodel11)
model2graph = ggpredict(lmodel11,c("Game"))
plot(model2graph)
lmodel11 =  lmer (sdz ~   Win*IsIntroducer+condition + (Win*IsIntroducer+condition|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+condition|TARGET))
summary(lmodel11)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11)
model2graph = ggpredict(lmodel11,c("IsIntroducer","Win","condition"))
plot(model2graph)
model1graph = ggpredict(lmodel7,c("IsIntroducer:Win","Win"))
lmodel =  lmer (sdz ~   IsIntroducer + (IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsIntroducer|TARGET))
lmodel2 =  lmer (sdz ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel3 =  lmer (sdz ~   condition+IsIntroducer + (condition+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition+IsIntroducer|TARGET))
lmodel4 =  lmer (sdz ~   condition*IsIntroducer + (condition*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition*IsIntroducer|TARGET))
lmodel5 =  lmer (sdz ~   Win + (Win|PAIR) + (1 | PARTICIPANT) + (Win|TARGET))
lmodel6 =  lmer (sdz ~   Win+IsIntroducer + (Win+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win+IsIntroducer|TARGET))
lmodel7 =  lmer (sdz ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
lmodel8 =  lmer (sdz ~   1+ (1|PAIR) + (1|TARGET))
lmodel9 =  lmer (sdz ~   IsSuccIntroducer + (IsSuccIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer|TARGET))
lmodel10 =  lmer (sdz ~   IsSuccIntroducer+IsIntroducer + (IsSuccIntroducer+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer+IsIntroducer|TARGET))
lmodel11 =  lmer (sdz ~   Win*IsIntroducer+condition + (Win*IsIntroducer+condition|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+condition|TARGET))
summary(lmodel11)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11)
summary(lmodel7)
model1graph = ggpredict(lmodel7,c("IsIntroducer","Win"))
plot(model1graph)
P1<-read.csv("data_P1_TpR.csv")
P2<-read.csv("data_P2_TpR.csv")
P1_sd<-read.csv("data_P1_SD.csv")
P2_sd<-read.csv("data_P2_SD.csv")
P2_sd$Time <- P2$Time
success <- as.numeric(P2_sd$Success)
condition<-as.factor(P2_sd$Condtion)
TIME <-round(P2_sd$Time/1000)
PAIR <- as.factor(P2_sd$Pair)
TARGET<- as.factor(P2_sd$Target)
IsIntroducer <-as.factor(P2_sd$Introducer)
GAME<- P2_sd$Game
sdz<-P2_sd$Z
sdx<-P2_sd$X
sdy<-P2_sd$Y
TIME2 <- round(P2_sd$Time/1000)
model9 = glmer( success ~ IsIntroducer+TIME + (IsIntroducer+TIME|PAIR) + (IsIntroducer+TIME|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model8 = glmer( success ~ IsIntroducer + (IsIntroducer|PAIR) + (IsIntroducer|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model7 = glmer( success ~ GAME*TIME + (GAME*TIME|PAIR) + (GAME*TIME|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model6 = glmer( success ~ GAME+TIME + (GAME+TIME|PAIR) + (GAME+TIME|TARGET),family = binomial(link = "logit"))
model5 = glmer( success ~ GAME + (GAME|PAIR) + (GAME|TARGET),family = binomial(link = "logit"))
model4 = glmer( success ~ condition * TIME + (condition*TIME|PAIR) + (condition *TIME| TARGET), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')), family = binomial(link = "logit"))
model3 = glmer( success ~ condition + TIME + (condition+TIME|PAIR) + (condition +TIME| TARGET), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')),  family = binomial(link = "logit"))
model2B = glmer( success ~ condition + (condition|PAIR) + (condition|TARGET), family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model2 = glmer( success ~ TIME + (TIME|PAIR) + (TIME|TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model1 = glmer( success ~ 1  + (1|PAIR) + (1| TARGET),family = binomial(link = "logit"), control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
success <- as.numeric(P$Success)
condition<-as.factor(P$Condtion)
TIME <-round(P$Time/1000)
PAIR <- as.factor(P$Pair)
TARGET<- as.factor(P$Target)
IsIntroducer <-as.factor(P$Introducer)
IsSuccIntroducer <- as.factor(P$Succ_Introducer)
PARTICIPANT <- as.factor(P$Participant)
sdz<-P$Z
sdx<-P$X
sdy<-P$Y
Game <- P$Game
Win <-as.factor(P$Success)
lmodel =  lmer (sdz ~   IsIntroducer + (IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsIntroducer|TARGET))
lmodel2 =  lmer (sdz ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel3 =  lmer (sdz ~   condition+IsIntroducer + (condition+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition+IsIntroducer|TARGET))
lmodel4 =  lmer (sdz ~   condition*IsIntroducer + (condition*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition*IsIntroducer|TARGET))
lmodel5 =  lmer (sdz ~   Win + (Win|PAIR) + (1 | PARTICIPANT) + (Win|TARGET))
lmodel6 =  lmer (sdz ~   Win+IsIntroducer + (Win+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win+IsIntroducer|TARGET))
lmodel7 =  lmer (sdz ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
lmodel8 =  lmer (sdz ~   1+ (1|PAIR) + (1|TARGET))
lmodel9 =  lmer (sdz ~   IsSuccIntroducer + (IsSuccIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer|TARGET))
lmodel10 =  lmer (sdz ~   IsSuccIntroducer+IsIntroducer + (IsSuccIntroducer+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer+IsIntroducer|TARGET))
lmodel11 =  lmer (sdz ~   Win*IsIntroducer+condition + (Win*IsIntroducer+condition|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+condition|TARGET))
summary(lmodel7)
lmodel12 =  lmer (sdz ~   sdx + (sdx|PAIR) + (1 | PARTICIPANT) + (sdx|TARGET))
summary(lmodel12)
model3graph = ggpredict(lmodel12,c("sdx"))
plot(model3graph)
lmodel12 =  lmer (sdz ~   sdx+condition + (sdx+condition|PAIR) + (1 | PARTICIPANT) + (sdx+condition|TARGET))
summary(lmodel12)
model3graph = ggpredict(lmodel12,c("sdx","condition"))
plot(model3graph)
lmodel12 =  lmer (sdz ~   sdx*condition + (sdx*condition|PAIR) + (1 | PARTICIPANT) + (sdx*condition|TARGET))
summary(lmodel7)
summary(lmodel12)
model3graph = ggpredict(lmodel12,c("sdx","condition"))
plot(model3graph)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12)
lmodel13 =  lmer (sdz ~   sdx*Win + (sdx*Win|PAIR) + (1 | PARTICIPANT) + (sdx*Win|TARGET))
summary(lmodel13)
lmodel13 =  lmer (sdz ~   sdx+Win + (sdx+Win|PAIR) + (1 | PARTICIPANT) + (sdx+Win|TARGET))
summary(lmodel13)
lmodel13 =  lmer (sdz ~   sdx + (sdx|PAIR) + (1 | PARTICIPANT) + (sdx|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel13 =  lmer (sdz ~   sdx+IsIntroducer + (sdx+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (sdx+IsIntroducer|TARGET))
summary(lmodel3)
summary(lmodel13)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel12 =  lmer (sdz ~   sdx*condition+IsIntroducer + (sdx*condition+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (sdx*condition+IsIntroducer|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel12 =  lmer (sdz ~   sdx*condition + (sdx*condition|PAIR) + (1 | PARTICIPANT) + (sdx*condition|TARGET))
lmodel13 =  lmer (sdz ~   sdx+IsIntroducer + (sdx+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (sdx+IsIntroducer|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel13 =  lmer (sdz ~   sdx + (sdx|PAIR) + (1 | PARTICIPANT) + (sdx|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
summary(lmodel12)
lmodel13 =  lmer (sdz ~   sdx +IsIntroducer+ (sdx+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (sdx+IsIntroducer|TARGET))
summary(lmodel13)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel13 =  lmer (sdz ~   sdx +IsIntroducer+condition+ (sdx+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (sdx+IsIntroducer|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
summary(lmodel13)
lmodel13 =  lmer (sdz ~   sdx +IsIntroducer+condition+ (sdx+IsIntroducer+condition|PAIR) + (1 | PARTICIPANT) + (sdx+IsIntroducer+condition|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel13 =  lmer (sdz ~   sdx*condition+IsIntroducer + (sdx*condition+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (sdx*condition+IsIntroducer|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel13 =  lmer (sdz ~   sdx*IsIntroducer + (sdx*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (sdx*IsIntroducer|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13)
lmodel14 =  lmer (sdz ~   Win*IsIntroducer+sdx + (Win*IsIntroducer+sdx|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+sdx|TARGET))
summary(lmodel14)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,
lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13,lmodel14)
lmodel14 =  lmer (sdz ~   Win*IsIntroducer+sdx+condition + (Win*IsIntroducer+sdx+condition|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+sdx+condition|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,
lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13,lmodel14)
lmodel14 =  lmer (sdz ~   Win*IsIntroducer+sdx*condition + (Win*IsIntroducer+sdx*condition|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+sdx*condition|TARGET))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,
lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13,lmodel14)
summary(lmodel13)
lmodel13 =  lmer (sdz ~   sdx+condition + (sdx+condition|PAIR) + (1 | PARTICIPANT) + (sdx+condition|TARGET))
summary(lmodel13)
model3graph = ggpredict(lmodel12,c("sdx","condition"))
plot(model3graph)
model3graph = ggpredict(lmodel13,c("sdx","condition"))
plot(model3graph)
model3graph = ggpredict(lmodel12,c("sdx","condition"))
plot(model3graph)
model1graph = ggpredict(lmodel7,c("IsIntroducer","Win"))
plot(model1graph)
model3graph = ggpredict(lmodel12,c("sdx","condition"))
plot(model3graph)
model3graph = ggpredict(lmodel12,c("condition"))
plot(model3graph)
lmodel2 =  lmer (sdz ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel2B =  lmer (sdy ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel2C =  lmer (sdx ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
model3graph = ggpredict(lmodel2C,c("condition"))
plot(model3graph)
lmodel2B =  lmer (sdy ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel2B =  lmer (sdz ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel2C =  lmer (sdx ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
model3graph = ggpredict(lmodel2C,c("condition"))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,
lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13,lmodel14)
sdy
lmodel7 =  lmer (sdx ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
summary(lmodel7)
model8
summary(model8)
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
model2graph = ggpredict(model8,c("IsIntroducer"))
plot(model2graph)
model8 = glmer( success ~ IsIntroducer+GAME + (IsIntroducer+GAME|PAIR) + (IsIntroducer+GAME|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
model8 = glmer( success ~ IsIntroducer+GAME + (IsIntroducer+GAME|PAIR) + (IsIntroducer+GAME|TARGET),family = binomial(link = "logit"))
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
model8 = glmer( success ~ IsIntroducer*GAME + (IsIntroducer*GAME|PAIR) + (IsIntroducer*GAME|TARGET),family = binomial(link = "logit"))
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
model8 = glmer( success ~ IsIntroducer*TIME + (IsIntroducer*TIME|PAIR) + (IsIntroducer*TIME|TARGET),family = binomial(link = "logit"))
model8 = glmer( success ~ IsIntroducer+GAME + (IsIntroducer+GAME|PAIR) + (IsIntroducer+GAME|TARGET),family = binomial(link = "logit"))
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
model8 = glmer( success ~ IsIntroducer*GAME + (IsIntroducer*GAME|PAIR) + (IsIntroducer*GAME|TARGET),family = binomial(link = "logit"))
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
model8 = glmer( success ~ IsIntroducer+condition + (IsIntroducer+condition|PAIR) + (IsIntroducer+condition|TARGET),family = binomial(link = "logit"))
AIC(model1,model2,model2B,model3,model4,model5,model6,model7,model8,model9)
model2graph = ggpredict(model9,c("TIME","IsIntroducer"))
model1graph = ggpredict(model2,c("TIME [all]"))
knitr::opts_chunk$set(echo = TRUE)
model8 = glmer( success ~ IsIntroducer + (IsIntroducer|PAIR) + (IsIntroducer|TARGET),family = binomial(link = "logit"),control = glmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,
lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13,lmodel14)
P <- rbind(P2_sd,P1_sd)
P1<-read.csv("data_P1_TpR.csv")
P2<-read.csv("data_P2_TpR.csv")
P1_sd<-read.csv("data_P1_SD.csv")
P2_sd<-read.csv("data_P2_SD.csv")
P2_sd$Time <- P2$Time
P1_sd$Time <- P1$Time
P <- rbind(P2_sd,P1_sd)
#P <- P[P$Condtion=="modified",]
P <- P[P$Role=="director",]
D<-paste0(P$Target, P$Introducer)
ggplot(data=P, aes(x=D, y=Z, color=Introducer)) +
geom_point(position=position_dodge(width=0.3))
success <- as.numeric(P$Success)
condition<-as.factor(P$Condtion)
TIME <-round(P$Time/1000)
PAIR <- as.factor(P$Pair)
TARGET<- as.factor(P$Target)
IsIntroducer <-as.factor(P$Introducer)
IsSuccIntroducer <- as.factor(P$Succ_Introducer)
PARTICIPANT <- as.factor(P$Participant)
sdz<-P$Z
sdx<-P$X
sdy<-P$Y
Game <- P$Game
Win <-as.factor(P$Success)
lmodel =  lmer (sdz ~   IsIntroducer + (IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsIntroducer|TARGET))
lmodel2B =  lmer (sdz ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel2C =  lmer (sdx ~   condition + (condition|PAIR) + (1 | PARTICIPANT) + (condition|TARGET))
lmodel3 =  lmer (sdz ~   condition+IsIntroducer + (condition+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition+IsIntroducer|TARGET))
lmodel4 =  lmer (sdz ~   condition*IsIntroducer + (condition*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (condition*IsIntroducer|TARGET))
lmodel5 =  lmer (sdz ~   Win + (Win|PAIR) + (1 | PARTICIPANT) + (Win|TARGET))
lmodel6 =  lmer (sdz ~   Win+IsIntroducer + (Win+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win+IsIntroducer|TARGET))
lmodel7 =  lmer (sdz ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
lmodel8 =  lmer (sdz ~   1+ (1|PAIR) + (1|TARGET))
lmodel9 =  lmer (sdz ~   IsSuccIntroducer + (IsSuccIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer|TARGET))
lmodel10 =  lmer (sdz ~   IsSuccIntroducer+IsIntroducer + (IsSuccIntroducer+IsIntroducer|PAIR) + (1 | PARTICIPANT) + (IsSuccIntroducer+IsIntroducer|TARGET))
lmodel11 =  lmer (sdz ~   Win*IsIntroducer+condition + (Win*IsIntroducer+condition|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+condition|TARGET))
lmodel12 =  lmer (sdz ~   sdx*condition + (sdx*condition|PAIR) + (1 | PARTICIPANT) + (sdx*condition|TARGET))
lmodel13 =  lmer (sdz ~   sdx+condition + (sdx+condition|PAIR) + (1 | PARTICIPANT) + (sdx+condition|TARGET))
lmodel14 =  lmer (sdz ~   Win*IsIntroducer+sdx*condition + (Win*IsIntroducer+sdx*condition|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer+sdx*condition|TARGET))
summary(lmodel13)
AIC(lmodel,lmodel2,lmodel3,lmodel4,lmodel5,lmodel6,lmodel7,
lmodel8,lmodel9,lmodel10,lmodel11,lmodel12,lmodel13,lmodel14)
model2Bgraph = ggpredict(lmodel2B,c("condition"))
plot(model2Bgraph)
lmodel7 =  lmer (sdz ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
lmodel7 =  lmer (sdx ~   Win*IsIntroducer + (Win*IsIntroducer|PAIR) + (1 | PARTICIPANT) + (Win*IsIntroducer|TARGET))
summary(lmodel7)
